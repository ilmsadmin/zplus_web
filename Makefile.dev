# Makefile for ZPlus Web Backend Development

.PHONY: help dev build run test clean install deps db-only air

# Default target
help:
	@echo "Available commands for development:"
	@echo "  make dev       - Setup development environment and start backend"
	@echo "  make run       - Run backend with go run main.go"
	@echo "  make air       - Run backend with hot reload (air)"
	@echo "  make build     - Build the backend binary"
	@echo "  make test      - Run tests"
	@echo "  make deps      - Install/update dependencies"
	@echo "  make db-only   - Start only database services (PostgreSQL + Redis)"
	@echo "  make clean     - Clean build artifacts"
	@echo "  make install   - Install development tools"

# Setup development environment
dev:
	@echo "🚀 Setting up development environment..."
	@if [ ! -f "backend/.env" ]; then \
		echo "Creating .env file..."; \
		cp backend/.env.example backend/.env; \
	fi
	@mkdir -p backend/logs
	@cd backend && go mod tidy
	@echo "✅ Development environment ready!"
	@echo "Now you can run: make run or make air"

# Install development dependencies
deps:
	@echo "📦 Installing Go dependencies..."
	@cd backend && go mod download
	@cd backend && go mod tidy

# Install development tools
install:
	@echo "🔧 Installing development tools..."
	@go install github.com/cosmtrek/air@latest
	@echo "✅ Development tools installed!"

# Run backend with go run
run: dev
	@echo "🏃 Starting backend with go run..."
	@cd backend && go run main.go

# Run backend with hot reload
air: dev install
	@echo "🔥 Starting backend with hot reload..."
	@cd backend && air

# Build the backend binary
build: deps
	@echo "🔨 Building backend..."
	@cd backend && go build -o main .
	@echo "✅ Backend built successfully!"

# Run tests
test:
	@echo "🧪 Running tests..."
	@cd backend && go test ./...

# Start only database services
db-only:
	@echo "🗄️ Starting database services..."
	@docker-compose up -d postgres redis
	@echo "✅ Database services started!"
	@echo "PostgreSQL: localhost:5432"
	@echo "Redis: localhost:6379"

# Clean build artifacts
clean:
	@echo "🧹 Cleaning build artifacts..."
	@cd backend && rm -f main
	@cd backend && rm -rf tmp/
	@cd backend && rm -f build-errors.log
	@echo "✅ Clean completed!"

# Check if database services are running
check-db:
	@echo "🔍 Checking database services..."
	@if pg_isready -h localhost -p 5432 -U postgres > /dev/null 2>&1; then \
		echo "✅ PostgreSQL is running"; \
	else \
		echo "❌ PostgreSQL is not running"; \
		echo "💡 Run: make db-only"; \
	fi
	@if redis-cli -h localhost -p 6379 ping > /dev/null 2>&1; then \
		echo "✅ Redis is running"; \
	else \
		echo "❌ Redis is not running"; \
		echo "💡 Run: make db-only"; \
	fi

# Stop database services
stop-db:
	@echo "🛑 Stopping database services..."
	@docker-compose stop postgres redis

# View database logs
db-logs:
	@docker-compose logs -f postgres redis
